exports.init_gmdf = function(config) {
    return {
        // 初始化路由
        init_route : function(options) {

            var _app = options.app;
            var _basePath = options.basePath;

            _app.use(_basePath + "", require('./web/routes/index'));
            _app.use(_basePath + "/demo", require('./web/routes/demo'));
            _app.use(_basePath, require('./web/routes/menu'));
            _app.use(_basePath + "/system", require('./web/routes/system'));
            _app.use(_basePath, require('./web/routes/role'));
            _app.use(_basePath + "/org", require('./web/routes/organization'));
            _app.use(_basePath + "/dict", require('./web/routes/dict'));
            _app.use(_basePath + "/user", require('./web/routes/user'));
            _app.use(_basePath + "/param", require('./web/routes/param'));
        },
        init_cas : function(options) {
            var _app = options.app;
            var auth_type = config.auth.auth_type;
            console.log('auth_type:', auth_type);
            if (auth_type == 'cas') {
                var cas_client = require('./common/middlewares/cas_client');
                var cas = new cas_client({
                    /*cas_url: config.auth.cas_server_url,
                    cas_lan_url: config.auth.cas_lan_server_url,*/
                    service_url: config.auth.cas_client_service_url,
                    cas_version: !config.auth.cas_server_version ? '2.0' : config.auth.cas_server_version,

                    cas_server_login_url:config.auth.cas_server_login_url,
                    cas_server_validate_url:config.auth.cas_server_validate_url,
                    cas_server_logout_url:config.auth.cas_server_logout_url,

                    renew: false,
                    is_dev_mode: false,
                    dev_mode_user: '',
                    dev_mode_info: {},
                    session_name: !config.auth.cas_client_session_name ? 'cas_sso_user' : config.auth.cas_client_session_name,
                    session_info: !config.auth.cas_client_session_name ? 'cas_sso_user_info' : config.auth.cas_client_session_name + '_info',
                    destroy_session: false
                });
                _app.use(cas.bounce);
            }
        },
        apm : function(app) {
            
            var apm = require('./common/apm/') ;
            app.use(apm.web);
            
        },
        init_auth_check : function(req, res, next) {
            var auth_check = require('./common/middlewares/auth_check');
            auth_check(req, res, next);
        },
        init_session : function (app) {
            var session = require('express-session');
            var MySQLStore = require('express-mysql-session')(session);

            var options = config['session']['db']['options'];

            var connection = config['session']['db']['connection'];
            var mysql_option = config['mysql'][connection];

            options['host'] = mysql_option['host'];
            options['port'] = mysql_option['port'];
            options['user'] = mysql_option['user'];
            options['password'] = mysql_option['password'];
            options['database'] = mysql_option['database'];

            var sessionStore = new MySQLStore(options);

            var session_options =  config['session']['options'];
            session_options['store'] = sessionStore;

            app.use(session(session_options));
        },
        // 获取mysql工具类
        get_mysql_utils : function(conn_name) {
            return require('./common/utils/mysql_utils')(conn_name);
        },
        // 获取app工具类
        get_app_utils : function() {
            return require('./common/utils/app_utils');
        }
    };
};



