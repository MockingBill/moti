var config = require('../../../config');
var app_utils = require('../utils/app_utils');

/**
 * 权限检查中间件
 * @param req
 * @param res
 * @param next
 */
module.exports = function(req, res, next) {

    // 不检查所有静态文件和ico
    if (/(^\/(static))|(.*?(ico|jpg|gif|png|bmp|js|css)$)/.test(req.url)) {
        next();
        return;
    }
    //app_utils.debug("auth_check:"+req.method + '|' + req.url);

    var exclude_auth_check_urls = config.routes.exclude_auth_check_urls;
    // 循环url
    var flag = false;
    exclude_auth_check_urls.forEach(function (item) {
        // 检查规则里面是否存在通配符
        if (item.indexOf('*') == -1) {
            flag = flag || new RegExp("^" + config.project.base + item).test(req.url);
        }
        else {
            flag = flag || app_utils.wildcard(config.project.base +item, req.url);
        }
    });

    // 在排除列表中
    if (flag) {
        next();
    }
    else {
        var current_user = app_utils.getCurrentUser(req);
        if(current_user) {
            //app_utils.debug('current user:', current_user.login_account);
            var curUrl = req.url;
            var curUrlIndex = curUrl.indexOf('?');
            if (curUrlIndex != -1) {
                curUrl = curUrl.substring(0, curUrlIndex);
            }
            if(curUrl == config.project.base + '/undefined') {
                app_utils.debug('url:%s,sub_url:%s', req.url, curUrl);
                return res.redirect(config.project.base);
            }

            var super_users = config.routes.super_users;
            var is_super_user = false;
            if(super_users) {
                super_users.forEach(function(item){
                    // 检查规则里面是否存在通配符
                    is_super_user = is_super_user || item == current_user.login_account;
                });
            }
            //console.log(req.session.current_user.login_account + '超级用户：'+is_super_user);
            if(is_super_user) {
                next();
            }
            else {

                // 检查此次访问是否是登陆就能访问的url
                var logged_can_access_urls = config.routes.logged_can_access_urls;
                var logged_access = false;
                var turl = curUrl.replace(config.project.base, '');
                logged_can_access_urls.forEach(function (item) {
                    // 检查规则里面是否存在通配符
                    if (item.indexOf('*') == -1) {//console.log(eval('/^'+item+'/'));
                        //console.log(item, turl, new RegExp("^" + item + "$").test(turl));
                        logged_access = logged_access || new RegExp("^" + item + "$").test(turl);
                    }
                    else {
                        logged_access = logged_access || app_utils.wildcard(item, turl);
                    }
                });
                // 在登陆后就能访问的url里
                if (logged_access) {
                    next();
                }
                else {
                    if (!app_utils.wildcard("*.do", curUrl)) {
                        // 检查访问权限
                        var current_user_auths = req.session.current_user_auths;

                        var url = curUrl;

                        url = url.replace(config.project.base + '/', '');

                        // 无权限
                        if (!current_user_auths[url]) {
                            exports.toRenderNoPermission(req, res, next);
                        }
                        else {
                            next();
                        }
                    }
                    else { // 暂时只检查页面的访问
                        next();
                    }




                    // 判断此次访问是否是操作权限
                    //next();

                    // 判断此次访问是否是操作权限
                    /*if (!app_utils.wildcard("*.do", req.url)) {
                        var current_user_role_menus = req.session.current_user_role_menus;
                        var index = req.url.indexOf('?');
                        var url = req.url;
                        if (index != -1) {
                            url = url.substring(0, index);
                        }
                        url = url.replace(config.project.appurl + '/', '');
                        console.log('菜单权限检查:' + url);
                        // 无权限
                        if (!current_user_role_menus[url]) {
                            exports.toRenderNoPermission(req, res);
                        }
                        else {
                            next();
                        }
                    }
                    else {
                        var index = req.url.indexOf('?');
                        var url = req.url;
                        if (index != -1) {
                            url = url.substring(0, index);
                        }
                        // 数组
                        var current_user_role_menus_opts = req.session.current_user_role_menus_opts;
                        // 检查用户所拥有的权限,按method分类减少循环次数
                        var current_user_role_menus_opts_method = current_user_role_menus_opts[req.method.toLowerCase()];
                        //console.log(JSON.stringify(current_user_role_menus_opts_method));
                        // 获取http method操作权限
                        if (current_user_role_menus_opts_method) {
                            var has_role = false;
                            for (var i = 0; i < current_user_role_menus_opts_method.length; i++) {
                                var menu_opt = current_user_role_menus_opts_method[i];
                                var opt_url = menu_opt.opt_url;
                                //console.log("regx:" + "^" + config.project.appurl + menu_opt.opt_url.replace(/:\w+/g, '[^/]*'));
                                //console.log("url:" + url+'/'+(new RegExp("^" + config.project.appurl + menu_opt.opt_url.replace(/:\w+/g, '[^/]*') + '$').test(url)));
                                has_role = has_role || (new RegExp("^" + config.project.appurl + menu_opt.opt_url.replace(/:\w+/g, '[^/]*') + '$').test(url));
                            }
                            console.log(url+",has_role:" + has_role);
                            if (has_role) {
                                next();
                            }
                            else {
                                app_utils.respMsg4Paging(res, false, '3000', '无权访问', [], 0);
                            }
                        }
                        else {
                            app_utils.respMsg4Paging(res, false, '3000', '无权访问', [], 0);
                        }
                    }*/
                }
            }
        }
        else {
            app_utils.debug('unlogin return to login page');
            res.set({'page_tag':'return_login'});
            res.redirect(config.project.base + '/login');
        }
    }
};

/**
 * 跳转至无权限页面
 * @param req
 * @param res
 */
exports.toRenderNoPermission = function(req, res, next) {
    var err = new Error('您的权限不足，请尝试切换角色或联系管理员！');
    err.status = 401;
    next(err);
}