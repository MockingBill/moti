var mysql_utils = require('../../common/utils/mysql_utils')();
var config = require('../../../config');
var treeLength = 0;
/**
 * 分页查询系统列表
 */
exports.pagingUserList=function(params) {
    //, (select group_concat(c.sync_status) from common_user_sync c where c.user_id = a.user_id group by c.user_id) as sync_catalog_status
    //, (select group_concat(CONCAT('"', c.sync_catalog, '"', ':', c.sync_status)) from common_user_sync c where c.user_id = a.user_id group by c.user_id) as sync_catalog_status
    var sql = 'SELECT a.*,d.org_name,e.sys_name,get_dict_text (\'common_user_type\',a.user_type) AS user_type_name ';

    if(config.project.hasOwnProperty('account')
        && config.project.account.hasOwnProperty('sync')
        && config.project.account.sync.hasOwnProperty('status')
        && config.project.account.sync.status) {

        sql += " , (select group_concat(CONCAT(c.sync_catalog, ':', c.sync_status)) from common_user_sync c where c.user_id = a.user_id group by c.user_id) as sync_catalog_status";
    }
    sql += ' FROM `common_user_info` a LEFT JOIN common_org_info d ON a.user_org=d.org_id LEFT JOIN common_system_info e ON a.user_sys=e.id';
    var order = ' order by user_id ';
    var where = ' where 1 = 1 ';
    var countSql = 'select count(1) as total FROM common_user_info';

    var whereParam = [];
    if(params.user_name) {
        where += ' and user_name like ? or login_account like ?'
        whereParam.push('%' + params.user_name + '%');
        whereParam.push('%' + params.user_name + '%');
    }

    return mysql_utils.pagingQuery(sql + where + order, countSql + where, whereParam, params.page, params.limit, 0);
}

exports.isExist=function (account,cb) {
    var sql='select * from common_user_info where login_account=?'
    mysql_utils.find(sql,account).then(function (result) {
        cb(null,result.length)
    }).catch(function (err) {
        cb(null,err)
    })
}

/**
 * 保存用户
 */
exports.saveUser=function (mapEntity,cb) {
    return mysql_utils.save("common_user_info",mapEntity);
};

/**
 * 保存角色
 */
exports.saveRole=function (mapEntity,cb) {
    return mysql_utils.save("common_user_roles",mapEntity);
};

/**
 * 通过id修改用户
 */
exports.updateUserById=function(conditions,update,cb){
    return mysql_utils.update("common_user_info",conditions,update);
};

/**
 * 通过id修改角色
 */
exports.updateRoleById=function(conditions,update,cb){

    return new Promise(async function (resolve, reject) {
        try{
            await mysql_utils.delete("common_user_roles",conditions);
            let sresult = await mysql_utils.save("common_user_roles",update);
            resolve(sresult);
        }
        catch (e) {
            reject(e);
        }
    });
};


/**
 * 通过id重置密码
 */
exports.ResetUserPwdById=function(conditions,update){
    return mysql_utils.update("common_user_info",conditions,update);
};


/**
 * 查找系统列表
 */
exports.findSysList=function(cb){
    var sql="select id,sys_name from common_system_info";
    mysql_utils.find(sql).then(function (result) {
        cb(null,result);
    }).catch(function (error) {
        console.error(error);
        cb(null,null);
    });
};


/*
* 查找角色
 */
exports.findRoleList=function(condition){
    var sql="select id,role_name from common_role_info where sys_id = " + condition;
    return mysql_utils.find(sql)
};

/*
* 查找组织类型
 */
exports.findOrgArea=function(cb){
    var sql="select area_id,area_name from common_area_info";
    mysql_utils.find(sql).then(function (result) {
        cb(null,result);
    }).catch(function (error) {
        console.error(error);
        cb(null,null);
    });
};


/*
* 查找人员类型
 */
exports.findUserStyleList=function(cb){
    var sql="SELECT a.*,b.item_text,b.item_value FROM common_dict_info a left join common_dict_item b on a.dict_id = b.dict_id where dict_code = \'common_user_type\'";
    mysql_utils.find(sql).then(function (result) {
        cb(null,result);
    }).catch(function (error) {
        console.error(error);
        cb(null,null);
    });
};


/*
* 查找组织列表
 */
exports.findOrgList=function(cb){
    var sql="select org_id,org_name from common_org_info where org_id != 1";
    mysql_utils.find(sql).then(function (result) {
        cb(null,result);
    }).catch(function (error) {
        console.error(error);
        cb(null,null);
    });
};



/*
* 查找当前用户角色
 */
exports.findCurrentRole=function(condition){
    var sql="SELECT b.role_name AS name,a.role_id AS val FROM common_user_roles a JOIN common_role_info b ON a.role_id=b.id WHERE a.user_id= " + condition;
    return mysql_utils.find(sql);
};


/*
* 查找当前用户组织名称
 */
exports.findOrgName=function(condition){
    var sql="select org_id,org_name from common_org_info where org_id = " + condition;
    return mysql_utils.find(sql);
};


/*
* 切换系统，获取当前系统用户人员信息
 */
exports.switchSysData=function (sys_id,params) {
    var sql = 'SELECT a.*,d.org_name,e.sys_name,get_dict_text (\'common_user_type\',a.user_type) AS user_type_name ';

    if(config.project.hasOwnProperty('account')
        && config.project.account.hasOwnProperty('sync')
        && config.project.account.sync.hasOwnProperty('status')
        && config.project.account.sync.status) {

        sql += " , (select group_concat(CONCAT(c.sync_catalog, ':', c.sync_status)) from common_user_sync c where c.user_id = a.user_id group by c.user_id) as sync_catalog_status";
    }
    sql += ' FROM `common_user_info` a LEFT JOIN common_org_info d ON a.user_org=d.org_id LEFT JOIN common_system_info e ON a.user_sys=e.id';
    var order = ' order by user_id ';
    var where = ' where 1 = 1 ';
    var countSql = 'select count(1) as total FROM common_user_info';

    var whereParam = [];
    if(sys_id) {
        where += ' and user_sys = ? ';
        whereParam.push(sys_id);
    }

    if(params.user_name) {
        where += ' and user_name like ? or login_account like ?'
        whereParam.push('%' + params.user_name + '%');
        whereParam.push('%' + params.user_name + '%');
    }

    return mysql_utils.pagingQuery(sql + where + order, countSql + where, whereParam, params.page, params.limit, 0);
};

/**
 * 检查账号同步状态
 * @param user_id
 * @param sync_catalog
 */
exports.checkAccountSync = function(user_id, sync_catalog) {
    return new Promise(async function (resolve, reject) {
        try{
            var sql = 'select a.* from common_user_sync a where a.user_id = ? and a.sync_catalog = ?';
            let result = await mysql_utils.find(sql, [user_id, sync_catalog]);
            if(result.length == 0) {
                resolve({status:-1}); // 未同步
            }
            else {
                resolve({status:result[0].sync_status}); // 1：已同步，其他：未同步
            }
        }
        catch(e) {
            reject(e);
        }
    });
}

/**
 * 保存账号同步记录
 * @param sync_map
 */
exports.saveAccountSync = function(sync_map) {
    return mysql_utils.save("common_user_sync", sync_map);
}

/**
 * 更新账号同步记录
 * @param sync_map
 */
exports.updateAccountSync = function(conditions, sync_map) {
    return mysql_utils.update("common_user_sync", conditions, sync_map);
}
