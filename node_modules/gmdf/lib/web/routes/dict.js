var express = require('express');
var router = express.Router();

var dict_service = require('../services/dict_service');
var app_utils = require('../../common/utils/app_utils');

// 错误代码列表
var ecl = require('../ecl/dict');

//正则表达
var reg = /^[1-9]\d*|0$/;

/**
 * 字典列表
 */
router.get('/list.do', async function (req, res, next) {
    try {
        let result = await dict_service.pagingDictList(req.query);
        app_utils.respJsonData(res, result);
    } catch (error) {
        app_utils.returnEclMsg(res,false,ecl,10,5100,error);
    }
})
/**
 * 保存字典信息
 */
.post('/save.do',async function (req,res,next) {
    try{
        var mapEntity={};
        var field=req.body;
        for(var key in field){
            mapEntity[key]=field[key];
        }
        var result=await dict_service.saveDict(mapEntity);
        app_utils.returnEclMsg(res,true,ecl,11,2000,null);
    }catch (error){
        app_utils.returnEclMsg(res,false,ecl,11,5100,error);

    }
})
/**
 * 修改字典信息
 */
    .post('/modify.do',async function (req,res,next) {
        try{
            var dict_id=req.body.dict_id;

            if(!reg.test(dict_id)){
                app_utils.returnEclMsg(res,false,ecl,12,5100,null);
                return;

            }
            var mapEntity={};
            var idmap={
                dict_id:dict_id
            };
            var field=req.body;
            for(var key in field){
                if(key=='dict_id'){
                    continue;
                }
                mapEntity[key]=field[key];
            }
            await dict_service.updateDictById(idmap,mapEntity);
            app_utils.returnEclMsg(res,true,ecl,12,2000,null);
        }catch (error){
            app_utils.returnEclMsg(res,false,ecl,12,5101,error);
        }
    })
    /**
     * 字典id的属性列表
     */
    .get('/dictitem/list.do', async function (req, res, next) {
    try {
        var dict_id=req.query.dict_id;
        console.log('dict id',dict_id);
        let result = await dict_service.pagingDictItemListById(dict_id,req.query);
        app_utils.respJsonData(res, result);
    } catch (error) {
        app_utils.returnEclMsg(res,false,ecl,13,5100,error);
    }
    })
    /**
     * 属性列表
     */
    .get('/item/list.do/', async function (req, res, next) {
        try {
            let result = await dict_service.pagingDictItemList(req.query);
            app_utils.respJsonData(res, result);
        } catch (error) {
            app_utils.returnEclMsg(res,false,ecl,14,5100,error);
        }
    })
/**
 * 保存字典属性信息
 */
    .post('/item/save.do/',async function (req,res,next) {
        try{
            var mapEntity={};
            var field=req.body;
            // console.log("body",field);

            for(var key in field){
                if(key=='dict_item_name'){
                    continue;
                }
                mapEntity[key]=field[key];
            }
            var result=await dict_service.saveDictItem(mapEntity);
            // console.log("resut",mapEntity);
            app_utils.returnEclMsg(res,true,ecl,15,2000,null);
        }catch (error){
            app_utils.returnEclMsg(res,false,ecl,15,5100,error);

        }
    })
    /**
     * 修改字典属性信息
     */
    .post('/item/modify.do',async function (req,res,next) {
        try{
            var item_id=req.body.item_id;

            if(!reg.test(item_id)){
                app_utils.returnEclMsg(res,false,ecl,16,5100,null);
                return;

            }
            var mapEntity={};
            var idmap={
                item_id:item_id
            };
            var field=req.body;
            // console.log("body",field);
            for(var key in field){
                if(key=='dict_item_name'||key=='item_id'){
                    continue;
                }
                mapEntity[key]=field[key];
            }
            // console.log("resut",mapEntity);

            await dict_service.updateDictItemById(idmap,mapEntity);
            app_utils.returnEclMsg(res,true,ecl,16,2000,null);
        }catch (error){
            app_utils.returnEclMsg(res,false,ecl,16,5101,error);
        }
    })
    /**
     * 获取上级属性列表
     */
    .get('/itemList.do/:id',async function (req,res) {
        try{
            var dict_id=req.params.id;
            dict_service.findAllItemList(dict_id,function (error,menuList) {
                if(error){
                    app_utils.returnEclMsg(res,false,ecl,17,5100,error);
                }else{
                    app_utils.returnEclMsg(res,true,ecl,17,2000,menuList);
                }
            });
        }catch(error){
            app_utils.returnEclMsg(res,false,ecl,17,5100,error);
        }
    })
    /**
     * 获取属性树形目录
     */
    .get('/itemtree.do',async function (req,res,next) {
        try{
            let dict_id=req.query.dictid;
            let dict_name=req.query.dictname;
            dict_service.generateMenuTree(dict_id,dict_name,function (error,result) {
                if(error){
                    app_utils.returnEclMsg(res,false,ecl,18,5100,error);
                }else{
                    app_utils.returnEclMsg(res,true,ecl,18,2000,result);
                }
            })
        }catch(error){
            app_utils.returnEclMsg(res,false,ecl,18,5100,error);
        }
    })
;
module.exports = router;