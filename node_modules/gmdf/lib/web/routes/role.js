var express = require('express');
var router = express.Router();

var role_service = require('../services/role_service');
var app_utils = require('../../common/utils/app_utils');

// 错误代码列表
var ecl = require('../ecl/role');

var routePrefix='/role';

//正则表达
var reg = /^[1-9]\d*|0$/;

/**
 * 角色列表
 */
router.get(routePrefix+'/list.do', async function (req, res, next) {
    try {
        let result = await role_service.pagingRoleList(req.query);
        app_utils.respJsonData(res, result);
    } catch (error) {
        app_utils.returnEclMsg(res,false,ecl,10,5100,error);
    }
})
/**
 * 保存角色信息
 */
    .post(routePrefix+'/save.do',async function (req,res,next) {
    try{
        var mapEntity={};
        var field=req.body;
        for(var key in field){
            mapEntity[key]=field[key];
        }
        var result=await role_service.saveRole(mapEntity);
        app_utils.returnEclMsg(res,true,ecl,11,2000,null);
    }catch (error){
        app_utils.returnEclMsg(res,false,ecl,11,5100,error);
    }
})
    /**
     * 修改角色信息
     */
    .post(routePrefix+'/modify.do',async function (req,res,next) {
    try{
        var role_id=req.body.role_id;

        if(!reg.test(role_id)){
            app_utils.returnEclMsg(res,false,ecl,12,5100,null);
            return;
        }

        var mapEntity={};
        var idmap={
            id:role_id
        };
        var field=req.body;
        for(var key in field){
            if(key=='role_id'){
                continue;
            }
            mapEntity[key]=field[key];
        }
        await role_service.updateRoleById(idmap,mapEntity);
        app_utils.returnEclMsg(res,true,ecl,12,2000,null);
    }catch (error){
        app_utils.returnEclMsg(res,false,ecl,12,5102,error);
    }
})
    /**
     * 获取系统列表
     */
    .get(routePrefix+'/sysList.do',async function (req,res,next) {
        try{
            role_service.findAllSysList(function (error,sysList) {
                if(error){
                    app_utils.returnEclMsg(res,false,ecl,13,5100,error);
                }else{
                    app_utils.returnEclMsg(res,true,ecl,13,2000,sysList);
                }
            });
        }catch(error){
            app_utils.returnEclMsg(res,false,ecl,13,5100,error);
        }

})
    /**
     * 生成菜单树形目录json
     */
    .get(routePrefix+'/roletree.do',async function (req,res,next) {
        try{
            let sys_id=req.query.sysid;
            let sys_name=req.query.sysname;
            role_service.generateMenuTree(sys_id,sys_name,function (error,result) {
                if(error){
                    app_utils.returnEclMsg(res,false,ecl,14,5100,error);
                }else{
                    role_service.addOptsToTree(JSON.parse(result),function (err,result2) {
                        if(err){
                            app_utils.returnEclMsg(res,false,ecl,14,5100,error);
                        }else{
                            app_utils.returnEclMsg(res,true,ecl,14,2000,result2);
                        }
                    });
                }
            })
        }catch(error){
            app_utils.returnEclMsg(res,false,ecl,14,5100,error);
        }
    })
    /**
     * 查询角色拥有的树权限
     */
    .get(routePrefix+'/updateroletree.do',async function (req,res,next) {
        try{
            let role_id=req.query.roleid;
            let sys_id=req.query.sysid;
            let sys_name=req.query.sysname;

            role_service.generateMenuTreeWithCheckStatus(sys_id,role_id,sys_name,function (error,result) {
                if(error){
                    app_utils.returnEclMsg(res,false,ecl,15,5100,error);
                }else{
                    app_utils.returnEclMsg(res,true,ecl,15,2000,result);
                }
            })
        }catch(error){
            app_utils.returnEclMsg(res,false,ecl,15,5100,error);
        }
    })
    /**
     * 保存权限到权限列表,先删除再保存
     */
    .post(routePrefix+'/saveRoleOpt.do',async function (req,res,next) {
    try{
        let role_id=req.body.roleid;
        let sys_id=req.body.sysid;
        let optList=req.body.optlist?[req.body.optlist]:[req.body['optlist[]']];

        //删除再保存
        await role_service.deleteExistOpts(role_id,sys_id);

        if(typeof optList[0] == 'string'){
            let row={role_id:role_id,menu_id:optList[0]};
            await role_service.saveRoleOpts(row);
        }else{
            for(let i in optList[0]){
                let row={role_id:role_id,menu_id:optList[0][i]};
                await role_service.saveRoleOpts(row);
            }
        }

        app_utils.returnEclMsg(res,true,ecl,16,2000,null);

    }catch(error){
        app_utils.returnEclMsg(res,false,ecl,16,5100,error);
    }
})
    /**
     * 切换系统,刷新表格
     */
    .get(routePrefix+'/switchsys.do',async function (req,res,next) {
        try{
            var sys_id=req.query.sys_id;
            var result = await role_service.switchSysData(sys_id,req.query);
            app_utils.respJsonData(res, result);
        }catch (error){
            app_utils.returnEclMsg(res,false,ecl,17,5100,error);
        }
    })
;

module.exports = router;