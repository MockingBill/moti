var express = require('express');
var router = express.Router();

var org_service = require('../services/organization_service');
var app_utils = require('../../common/utils/app_utils');

// 错误代码列表
var ecl = require('../ecl/organization');

var routePrefix='/org';

//正则表达
var reg = /^[1-9]\d*|0$/;

/**
 * 机构列表
 */
router.get('/list.do', async function (req, res, next) {
    try {
        var result = await org_service.pagingOrgList(req.query);
        app_utils.respJsonData(res, result);
    } catch (error) {
        app_utils.returnEclMsg(res,false,ecl,10,5100,error);
    }
});


router.post('/save.do',async function (req,res,next) {
    try{
        var mapEntity={};
        var field=req.body;

        if(!reg.test(field.org_parent_id)){
            app_utils.returnEclMsg(res,false,ecl,11,5101,null);
            return;
        }

        for(var key in field){
            if(key != "org_parent_name"){
                mapEntity[key]=field[key];
            }
        }
        var result=await org_service.saveOrg(mapEntity);
        app_utils.returnEclMsg(res,true,ecl,11,2000,null);

    }catch (error){
        app_utils.returnEclMsg(res,false,ecl,11,5100,error);
    }
});

router.post('/modify.do',async function (req,res,next) {
    try{
        var id=req.body.org_id;
        console.log('id ===',id);
        if(!reg.test(id)){
            app_utils.returnEclMsg(res,false,ecl,12,5100,null);
            return;
        }
        var mapEntity={};
        var idmap={
            org_id:id
        };
        var field=req.body;

        if(!reg.test(field.org_parent_id)) {
            app_utils.returnEclMsg(res, false, ecl, 12, 5102, null);
            return;
        }

        if(id == field.org_parent_id) {
            app_utils.returnEclMsg(res,false,ecl,12,5101,null);
            return;
        }

        for(var key in field){
            if(key != "org_parent_name"){
                mapEntity[key]=field[key];
            }
        }
        //console.log(mapEntity);
        await org_service.updateOrgById(idmap,mapEntity);
        app_utils.returnEclMsg(res,true,ecl,12,2000,null);
    }catch (error){
        app_utils.returnEclMsg(res,false,ecl,12,5103,error);
    }
});


router.get('/orglist.do', async function (req,res) {
    try{
        org_service.findOrgList(function (error,orgList) {
            if(error){
                app_utils.returnEclMsg(res,false,ecl,13,5100,error);
            }else{
                app_utils.returnEclMsg(res,true,ecl,13,2000,orgList);
            }
        });
    }catch(error){
        app_utils.returnEclMsg(res,false,ecl,13,5100,error);
    }
});


router.get('/orgstyle.do', async function (req,res) {
    try{
        org_service.findOrgStyle(function (error,orgList) {
            if(error){
                app_utils.returnEclMsg(res,false,ecl,14,5100,error);
            }else{
                app_utils.returnEclMsg(res,true,ecl,14,2000,orgList);
            }
        });
    }catch(error){
        app_utils.returnEclMsg(res,false,ecl,14,5100,error);
    }
});

router.get('/orgarea.do', async function (req,res) {
    try{
        org_service.findOrgArea(function (error,orgList) {
            if(error){
                app_utils.returnEclMsg(res,false,ecl,15,5100,error);
            }else{
                app_utils.returnEclMsg(res,true,ecl,15,2000,orgList);
            }
        });
    }catch(error){
        app_utils.returnEclMsg(res,false,ecl,15,5100,error);
    }
});


router.get('/tree.do', async function (req, res, next) {
    try{
        org_service.OrgTreeList(function (error,result) {
            if(error){
                app_utils.returnEclMsg(res,false,ecl,16,5100,error);
            }else{
                app_utils.returnEclMsg(res,true,ecl,16,2000,result);
            }
        })
    }catch(error){
        app_utils.returnEclMsg(res,false,ecl,16,5100,error);
    }
});


router.get('/clickTree.do', async function (req,res,next) {
    try{
        var id=req.query.org_id;
        console.log('id ===',id);
        var result = await org_service.SearchNode(id,req.query);
        app_utils.respJsonData(res, result);
    }catch (error){
        app_utils.returnEclMsg(res,false,ecl,17,5100,error);
    }
});


router.post('/parentname.do', async function (req,res,next) {
    try{
        var org_id = req.body.org_parent_id;
        console.log(org_id)
        var result = await org_service.findParentName(org_id)
        app_utils.respJsonData(res,result);
    }catch(error){
        app_utils.returnEclMsg(res,false,ecl,18,5100,error);
    }
});



module.exports = router;