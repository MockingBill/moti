var express = require('express');
var router = express.Router();

var menu_service = require('../services/menu_service');
var app_utils = require('../../common/utils/app_utils');
// 错误代码列表
var ecl = require('../ecl/menu');

var mount=require('../../common/utils/mount_routes');
var path=require('path');
var app=express();
var routePrefix='/menu';

//正则表达
var reg = /^[1-9]\d*|0$/;

/**
 * 菜单列表
 */
router.get(routePrefix+'/list.do', async function (req, res, next) {
    try {
        let result = await menu_service.pagingMenuList(req.query);
        app_utils.respJsonData(res, result);
    } catch (error) {
        app_utils.returnEclMsg(res,false,ecl,10,5100,error);
    }
})
/**
 * 保存菜单
 */
    .post(routePrefix+'/save.do',async function (req,res,next) {
    try{
        // console.log('保存的mapEntity',req.body);
        var result=await menu_service.saveMenu(req.body);
        app_utils.returnEclMsg(res,true,ecl,11,2000,null);
    }catch (error){
        app_utils.returnEclMsg(res,false,ecl,11,5100,error);

    }
})
    /**
     * 修改菜单
     */
    .post(routePrefix+'/modify.do',async function (req,res,next) {
    try{
        var menu_id=req.body.menu_id;

        if(!reg.test(menu_id)){
            app_utils.returnEclMsg(res,false,ecl,12,5100,null);
            return;

        }
        var mapEntity={};
        var idmap={
            id:menu_id
        };
        var field=req.body;
        // console.log('修改实体',field);

        if(menu_id==field.menu_pid && menu_id!=1){
            app_utils.returnEclMsg(res,false,ecl,12,5101,null);
            return;
        }else{
            for(var key in field){
                if(key=='menu_pid_name'||key=='menu_id'){
                    continue;
                }
                mapEntity[key]=field[key];
            }
            // console.log('修改实体',mapEntity);
            await menu_service.updateMenuById(idmap,mapEntity);
            app_utils.returnEclMsg(res,true,ecl,12,2000,null);
        }

    }catch (error){
        app_utils.returnEclMsg(res,false,ecl,12,5103,error);
    }
})
    /**
     * 获取上级菜单列表
     */
    .get(routePrefix+'/menuList.do',async function (req,res) {
    try{
        menu_service.findAllMenuList(function (error,menuList) {
            if(error){
                app_utils.returnEclMsg(res,false,ecl,13,5100,error);
            }else{
                app_utils.returnEclMsg(res,true,ecl,13,2000,menuList);
            }
        });
    }catch(error){
        app_utils.returnEclMsg(res,false,ecl,13,5100,error);
    }
})
    /**
     * 获取系统列表
     */
    .get(routePrefix+'/sysList.do',async function (req,res,next) {
        try{
            menu_service.findAllSysList(function (error,sysList) {
                if(error){
                    app_utils.returnEclMsg(res,false,ecl,14,5100,error);
                }else{
                    app_utils.returnEclMsg(res,true,ecl,14,2000,sysList);
                }
            });
        }catch(error){
            app_utils.returnEclMsg(res,false,ecl,14,5100,error);
        }

})
    /**
     * 根据id获取菜单权限列表
     */
    .get(routePrefix+'/optlist.do/:id',async function (req,res,next) {
    try {
        var id=req.params.id;
        var result = await menu_service.pagingOptList(id,req.query);
        app_utils.respJsonData(res, result);
    } catch (error) {
        app_utils.returnEclMsg(res,false,ecl,15,5100,error);
    }
})
    /**
     * 保存菜单权限
     */
    .post(routePrefix+'/opt/save.do',async function (req,res,next) {
    try{
        var mapEntity={};
        var field=req.body;
        for(var key in field){
            if(key=='menu_name'){
                continue;
            }
            mapEntity[key]=field[key];
        }
        await menu_service.saveMenuOpt(mapEntity);
        app_utils.returnEclMsg(res,true,ecl,16,2000,null);
    }catch (error){
        app_utils.returnEclMsg(res,false,ecl,16,5100,error);
    }
})
    /**
     * 修改菜单权限
     */
    .post(routePrefix+'/opt/modify.do/:id',async function (req,res,next) {
    try{
        var id=req.params.id;
        console.log('id ===',id);
        if(!reg.test(id)){
            app_utils.returnEclMsg(res,false,ecl,17,5102,null);
            return;
        }
        var mapEntity={};
        var idmap={
            id:id
        };
        var field=req.body;
        for(var key in field){
            if(key=='menu_name'){
                continue;
            }
            mapEntity[key]=field[key];
        }
        await menu_service.updateMenuOptById(idmap,mapEntity);
        app_utils.returnEclMsg(res,true,ecl,17,2000,null);
    }catch (error){
        app_utils.returnEclMsg(res,false,ecl,17,5100,error);
    }
})
    /**
     * 批量保存菜单权限
     */
    .post(routePrefix+'/opt/batch/generate.do/:id',async function (req,res,next) {
        try{
            let id=req.params.id;
            let datagrid=JSON.parse(req.body.opts);
            let optsLength=0;
            for(let i in datagrid){
                menu_service.isExit(datagrid[i].opt_url,function (error,result) {
                    if(error){
                        console.log(error);
                    }else{
                        if(result==0){//表中不存在 插入
                            datagrid[i].menu_id=id;
                            console.log('即将插入的操作',datagrid[i]);
                            menu_service.saveMenuOpt(datagrid[i]);
                            optsLength=optsLength+1;
                        }else{
                            console.log('已存在，不执行插入');
                        }
                    }
                })
            }
            app_utils.respMsg(res, true, 4000, '成功追加'+optsLength+'个菜单权限', null, null);
        }catch (error){
            app_utils.returnEclMsg(res,false,ecl,18,5100,error);
        }
    } )
    /**
     * 生成操作中获取路由列表
     */
    .get(routePrefix+'/routes/list.do/:key',async function (req,res,next) {
    try{
        let key=req.params.key;
        if(!key){
            app_utils.returnEclMsg(res,false,ecl,19,5100,null);
            return;
        }
        let regStr='/'+key;
        let datagrid=[];
        let notExistDatagrid=[];
        var newPath=path.resolve(__dirname,'..');
        var stack=[];
        stack=mount(app,key,newPath,true);
        if(stack.length<1){
            app_utils.returnEclMsg(res,false,ecl,19,5100,null);
            return ;
        }else{
            for(var i in stack){
                let map={
                    opt_code:'',
                    opt_name:'',
                    opt_url:'',
                    opt_method:'',
                    opt_status:1,
                    opt_remark:'',
                    opt_order:1
                };
                map.opt_url=stack[i].path;
                map.opt_method=stack[i].method;
                map.opt_code=stack[i].path.replace(new RegExp(regStr),"");
                datagrid.push(map);
            }
            //检查数据库中是否已经存在
            menu_service.getAllOpts(function (error,result) {
                if(error){
                    console.log(error);
                }else {
                    for(var i in datagrid){
                        var flag=true;//不存在flag为true,存在则为false
                        for(var j in result){
                            if(result[j].opt_url==datagrid[i].opt_url&&result[j].opt_method==datagrid[i].opt_method){//存在
                                flag=false;
                            }
                        }
                        if(flag){//不存在
                            notExistDatagrid.push(datagrid[i]);
                        }
                    }
                    app_utils.returnEclMsg(res,true,ecl,19,2000,notExistDatagrid);
                }
            })

        }

    }catch (error){
        app_utils.returnEclMsg(res,false,ecl,19,5101,error);
    }
})
    /**
     * 生成菜单树形目录json
     */
    .get(routePrefix+'/menutree.do',async function (req,res,next) {
        try{
            let sys_id=req.query.sysid;
            let sys_name=req.query.sysname;
            menu_service.generateMenuTree(sys_id,sys_name,function (error,result) {
                if(error){
                    app_utils.returnEclMsg(res,false,ecl,20,5100,error);
                }else{
                    app_utils.returnEclMsg(res,true,ecl,20,2000,result);
                }
            })
        }catch(error){
            app_utils.returnEclMsg(res,false,ecl,20,5100,error);
        }
    })
    /**
     * 点击菜单改变数据表格内容
     */
    .get(routePrefix+'/treeNode.do',async function (req,res,next) {
        try{
            var menu_id=req.query.menu_id;
            var sys_id=req.query.sys_id;
            var map={
                menu_id:menu_id,
                sys_id:sys_id
            }
            // console.log('menu',menu_id);
            // console.log('sys',sys_id);
            var result = await menu_service.searchClickNode(map,req.query);
            app_utils.respJsonData(res, result);
        }catch (error){
            app_utils.returnEclMsg(res,false,ecl,21,5100,error);
        }
    })
    /**
     * 切换系统,刷新表格
     */
    .get(routePrefix+'/switchsys.do',async function (req,res,next) {
        try{
            var sys_id=req.query.sys_id;
            var result = await menu_service.switchSysData(sys_id,req.query);
            app_utils.respJsonData(res, result);
        }catch (error){
            app_utils.returnEclMsg(res,false,ecl,22,5100,error);
        }
})
;

module.exports = router;
