<style>
    .require {
        color: red;
    }

    .layui-input {
        width: 270px;
    }

    .layui-form-item .layui-input-inline {
        width: 270px;
    }

    .downpanel .layui-select-title span {
        line-height: 38px;
    }

    .downpanel dl dd:hover {
        background-color: inherit;
    }

    .log {
        border: 1px solid #000;
        padding: 10px;
        overflow-y: auto;
        height: 90%;
    }

    #show_fact_model .layui-form-label {
        width: 100px;
    }
</style>
<div class="layui-row">
    <div class="layui-col-md2">
        <div class="layui-side-scroll">
            <ul id="org"></ul>
        </div>
    </div>
    <div class="layui-col-md10">

        <input type="hidden" id="basic_url" name="basic_url">
        <blockquote class="layui-elem-quote news_search">
            <div class="layui-inline">
                <div class="layui-input-inline">
                    <input type="text" value="" placeholder="请输入IP/设备名称" class="layui-input search_input">
                </div>
                <a class="layui-btn search_btn">
                    <i class="layui-icon">&#xe615;</i>查询</a>
            </div>
            <div class="layui-inline">
                <a class="layui-btn newsAdd_btn">
                    <i class="layui-icon">&#xe654;</i>新增</a>
            </div>
            <div class="layui-inline">
                <a class="layui-btn edit_btn">
                    <i class="layui-icon">&#xe642;</i>编辑</a>
            </div>
            <!--<div class="layui-inline">
                <a class="layui-btn delete_btn"><i class="layui-icon layui-icon-delete">&#xe640;</i>删除</a>
            </div>-->
            <div class="layui-inline">
                <a class="layui-btn templateDownload_btn">
                    <i class="layui-icon">&#xe601;</i>模板下载</a>
            </div>
            <div class="layui-inline">
                <a class="layui-btn batchImportHost_btn">
                    <i class="layui-icon">&#xe67c;</i>批量导入</a>
            </div>
            <div class="layui-inline">
                <a class="layui-btn batchIncludedHost_btn">
                    <i class="layui-icon">&#xe65b;</i>批量纳入管理
                </a>
            </div>
        </blockquote>

        <div class="layui-form news_list">
            <table class="layui-hide" id="devicedatagrid" lay-data="{id: 'devicedatagrid'}" lay-filter="TableFilter"></table>
        </div>
    </div>
</div>
<div id="open_model" style="display:none;" class="page_model">
    <div class="layui-tab-item layui-show">
        <div class="layui-form layui-form-pane">
            <form style="margin-top: 2%;margin-left: 5%;">
                <div id="hd">
                    <input type="hidden" id="inv_id" name="inv_id">
                    <input type="hidden" id="is_default" name="is_default">
                    <input type="hidden" id="is_proxy" name="is_proxy">
                    <input type="hidden" id="inv_status" name="inv_status" value="正常">
                    <div class="layui-form-item">
                        <div class="layui-inline">
                            <label class="layui-form-label">
                                <span class="require">*</span>名称:</label>
                            <div class="layui-input-inline">
                                <input type="text" name="inv_name" id="inv_name" lay-verify="required" autocomplete="off" class="layui-input">
                            </div>
                        </div>
                        <div class="layui-inline">
                            <label class="layui-form-label">
                                <span class="require">*</span>维护对象:</label>
                            <div class="layui-input-inline">
                                <input type="hidden" id="obj_code" name="obj_code">
                                <input type="text" name="obj_name" id="obj_name" lay-verify="required" autocomplete="off" class="layui-input" readonly>
                            </div>
                        </div>
                    </div>
                    <div class="layui-form-item">
                        <div class="layui-inline">
                            <label class="layui-form-label">
                                <span class="require">*</span>IP(内):</label>
                            <div class="layui-input-inline">
                                <input type="text" name="ip_inner" id="ip_inner" lay-verify="required" autocomplete="off" class="layui-input">
                            </div>
                        </div>
                        <div class="layui-inline">
                            <label class="layui-form-label">IP(公):</label>
                            <div class="layui-input-inline">
                                <input type="text" name="ip_out" id="ip_out" autocomplete="off" class="layui-input">
                            </div>
                        </div>
                    </div>
                    <div class="layui-form-item">
                        <div class="layui-inline">
                            <label class="layui-form-label">操作系统:</label>
                            <div class="layui-input-inline">
                                <input type="hidden" id="parent_id" name="parent_id">
                                <input type="text" name="os" id="os" autocomplete="off" class="layui-input" disabled="disabled" style="background-color: #f0f0f0;">
                            </div>
                        </div>
                        <div class="layui-inline">
                            <label class="layui-form-label">系统版本:</label>
                            <div class="layui-input-inline">
                                <input type="text" name="os_version" id="os_version" autocomplete="off" disabled="disabled" style="background-color: #f0f0f0;"
                                       class="layui-input">
                            </div>
                        </div>
                    </div>
                    <div class="layui-form-item">
                        <label for="zone_id" class="layui-form-label">
                            <span class="require">*</span>所属域:</label>
                        <div class="layui-input-inline">
                            <select name="zone_id" id="zone_id" lay-filter="aihao" lay-verify="required"></select>
                        </div>
                        <label class="layui-form-label" style="margin-left: 15px;">
                            <span style="color:red">*</span>所属部门</label>
                        <div class="layui-input-inline" style="text-align: left;">
                            <div class="layui-unselect layui-form-select downpanel">
                                <div class="layui-select-title">
                                    <span class="layui-input layui-unselect" id="org_value"></span>
                                    <input type="hidden" name="org_id" id="org_id">
                                    <input type="hidden" name="org_name" id="org_name">
                                    <i class="layui-edge"></i>
                                </div>
                                <dl class="layui-anim layui-anim-upbit">
                                    <dd>
                                        <ul id="org_name_tree"></ul>
                                    </dd>
                                </dl>
                            </div>
                        </div>
                    </div>
                    <div class="layui-form-item">
                        <div class="layui-inline">
                            <label class="layui-form-label">
                                <span class="require">*</span>认证方式:</label>
                            <div class="layui-input-inline" style="margin-left:0px">
                                <input type="radio" name="auth_type" value="用户名密码" title="用户名密码" checked="checked" lay-filter="auth_type">
                                <input type="radio" name="auth_type" value="SSH免秘钥" title="SSH免秘钥" lay-filter="auth_type">
                            </div>
                        </div>
                        <div class="layui-inline">
                            <label class="layui-form-label">
                                <span class="require">*</span>测试设备:</label>
                            <div class="layui-input-inline" style="margin-left:15px">
                                <input type="radio" name="is_test" value="1" title="是">
                                <input type="radio" name="is_test" value="0" title="否" checked="checked">
                            </div>
                        </div>
                    </div>
                    <div id="hideArea1">
                        <div class="layui-form-item">
                            <div class="layui-inline">
                                <label class="layui-form-label">用户来源:</label>
                                <div class="layui-input-inline">
                                    <select name="proof_id" id="proof_id" lay-filter="proof_id">
                                    </select>
                                </div>
                            </div>
                            <div class="layui-inline">
                                <label class="layui-form-label">
                                    <span class="require">*</span>接入方式:</label>
                                <div class="layui-input-inline">
                                    <select name="con_type" id="con_type">
                                        <option value="">请选择接入方式</option>
                                        <option value="ssh">SSH</option>
                                        <option value="rdp">RDP</option>
                                    </select>
                                </div>
                            </div>
                        </div>
                        <div class="layui-form-item">
                            <div class="layui-inline">
                                <label class="layui-form-label">认证用户名:</label>
                                <div class="layui-input-inline">
                                    <input type="text" name="user_name" id="user_name" autocomplete="off" class="layui-input">
                                </div>
                            </div>
                            <div class="layui-inline">
                                <label class="layui-form-label">sudo用户名:</label>
                                <div class="layui-input-inline">
                                    <input type="text" name="sudo_um" id="sudo_um" autocomplete="off" class="layui-input">
                                </div>
                            </div>
                        </div>
                        <div class="layui-form-item">
                            <div class="layui-inline">
                                <label class="layui-form-label">认证密码:</label>
                                <div class="layui-input-inline">
                                    <input type="text" name="pwd" id="pwd" autocomplete="off" class="layui-input">
                                </div>
                            </div>
                            <div class="layui-inline">
                                <label class="layui-form-label">sudo密码:</label>
                                <div class="layui-input-inline">
                                    <input type="text" name="sudo_pd" id="sudo_pd" autocomplete="off" class="layui-input">
                                </div>
                            </div>
                        </div>
                        <div class="layui-form-item">
                            <div class="layui-inline">
                                <label class="layui-form-label">
                                    <span class="require">*</span>端口:</label>
                                <div class="layui-input-inline">
                                    <input type="text" name="con_port" id="con_port" autocomplete="off" class="layui-input">
                                </div>
                            </div>
                            <div class="layui-inline"></div>
                        </div>
                    </div>
                    <div id="hideArea2" style="display: none;">
                        <div class="layui-form-item">
                            <label class="layui-form-label">
                                <span class="require">*</span>公钥</label>
                            <div class="layui-input-block">
                                <input type="text" class="layui-input" id="pub_key" name="pub_key" autocomplete="off" style="width: 93%;">
                            </div>
                        </div>
                    </div>
                    <div class="layui-form-item" align="right" style=";margin-right: 55px;margin-top: -38px">
                        <button class="layui-btn" id="save_btn" lay-filter="save_data" lay-submit>暂存</button>
                        <button class="layui-btn" id="test_btn" lay-filter="test_data" lay-submit>纳入管理</button>
                        <button class="layui-btn" id="delete_btn" lay-filter="delete_data" lay-submit>移除</button>
                    </div>
                </div>
                <div class="layui-form-item" id="logLayer">
                    <span style="text-align:left">输出</span>
                    <span style="text-align:right" id="task_status"></span>
                    <pre id="log" class="log" style="width: 760px;height: 100px;text-align: left;"></pre>
                </div>
            </form>
        </div>
    </div>
</div>
<!--tree model-->
<div id="obj_name_TreeModel" style="display: none" class="page_model">
    <div class="" style="float: left;">
        <ul id="obj_name_MenuParentTree" lay-filter="menutreefilter"></ul>
    </div>
    <div class="" style="float: right;">
        <blockquote class="layui-elem-quote news_search">
            <div class="layui-inline">
                <div class="layui-input-inline">
                    <input type="text" id="search_name" name="search_name" value="" placeholder="维护对象名称" class="layui-input">
                </div>
                <a class="layui-btn search_btn_model">
                    <i class="layui-icon">&#xe615;</i>查询</a>
            </div>
            <div class="layui-inline">
                <a class="layui-btn confirm_btn">
                    <i class="layui-icon">&#x1005;</i>确认</a>
            </div>
        </blockquote>
        <table class="layui-hide" id="datagrid_objType2" lay-data="{id: 'datagrid_objType2'}" lay-filter="TableFilter" style="width: 220px;"></table>
    </div>
</div>


<div class="contextMenu" id="myMenu1">
    <ul>
        <li id="open"> 打开</li>
        <li id="email"> 邮件</li>
        <li id="save"> 保存</li>
        <li id="delete"> 关闭</li>
    </ul>
</div>



<script type="text/html" id="itemStatusTpl">
        {{#out '{{d.inv_status == 0 ? "不可用" : d.inv_status == 1 ? "可用": "添加失败"}}'}}{{/out}}
</script>
<script type="text/html" id="openUrlTpl">
    <a class="layui-btn layui-btn-xs" lay-event="openURL">性能</a>

    <a class="layui-btn layui-btn-xs" lay-event="showdetails">详情</a>
</script>
<script type="text/javascript" src="{{projcfg.base}}/project/js/utils.js"></script>
<script src="{{projcfg.base}}/project/js/task_utils.js"></script>
<script src="{{projcfg.base}}/static/js/selectMultiple/jquery/jquery.js"></script>
<script src="{{projcfg.base}}/project/jquery.contextMenu/jquery.contextmenu.r2.js"></script>
<script>
    var basurl = '{{projcfg.base}}';
    layui.use(['table', 'form', 'tree', 'layer', 'jquery', 'upload'], function () {
        //var basurl = '{{projcfg.base}}';
        var table = layui.table;
        var layer = layui.layer;
        var form = layui.form;
        var tree = layui.tree;
        var upload = layui.upload;
        var $ = layui.$;
        var orgTreeData = [];
        var orgData = [];
        var orgId = '';//$("#orgId").val();

        // 查询菜单
        $.ajax({
            url: '{{projcfg.base}}/device_route/getOrg.do',
            data: { orgId: orgId },
            method: 'get',
            success: function (data) {
                // 点击菜单查询详细情况
                if (data && data.success) {
                    orgTreeData = data.data.nodes;
                    orgData = data.data.data;
                    tree({
                        elem: '#org', //传入元素选择器
                        nodes: orgTreeData,
                        click: function (node) {
                            if (node.children && node.children.length > 0) {//叶子节点判断
                                var idArr = [];
                                for (var i = 0; i < node.children.length; i++) {
                                    if (node.children[i].children && node.children[i].children.length > 0) {
                                        var children = node.children[i].children;
                                        for (var j = 0; j < children.length; j++) {
                                            idArr.push(children[j].id);
                                        }
                                    } else {
                                        idArr.push(node.children[i].id);
                                    }
                                }
                                queryListByOrg(idArr);
                            } else {
                                queryListByOrg([node.id]);
                            }
                        }
                    });
                    $('#org_name_tree').empty();
                    tree({
                        elem: '#org_name_tree',
                        nodes: data.data.nodes,
                        click: function (node) {
                            if (node.children) {
                                $('#org_id').val(0);
                                $('#org_name').val('');
                            } else {
                                $('#org_id').val(node.id);
                                $('#org_name').val(node.name);
                            }
                            var $select = $($(this)[0].elem).parents(".layui-form-select");
                            $select.removeClass("layui-form-selected").find(".layui-select-title span").html(node.name);
                        }
                    });
                }
            },
        });

        //获取url地址
        $.ajax({
            url: '{{projcfg.base}}/device_route/getUrl.do',
            type: 'get',
            success: function (data) {
                if (data.success) {
                    $('#basic_url').val(data.data[1].item_value);
                    return false;
                } else {
                    $('#basic_url').val('');
                    layer.msg(data.msg, { icon: 5 });
                    return false;
                }
            }
        });

        //下拉树 点击事件
        $(".downpanel").on("click", ".layui-select-title", function (e) {
            $(".layui-form-select").not($(this).parents(".layui-form-select")).removeClass("layui-form-selected");
            $(this).parents(".downpanel").toggleClass("layui-form-selected");
            layui.stope(e);
        }).on("click", "dl i", function (e) {
            layui.stope(e);
        });

        table.render({
            elem: '#devicedatagrid',
            id: 'devicedatagrid',
            url: '{{projcfg.base}}/device_route/list.do',
            height: '{{projcfg.page_config.height}}',
            cols: [[
                { type: 'checkbox' },
                //{ type: 'numbers', title: '序号', align: 'center' },
                { field: 'inv_name', title: '名称', align: 'center' },
                { field: 'ip_inner', title: 'IP(内)', align: 'center' },
                //{ field: 'ip_out', title: 'IP(公)', align: 'center' },
                { field: 'os', width: 90, title: '系统', align: 'center' },
                { field: 'os_version', width: 100, title: '系统版本', align: 'center' },
                { field: 'inv_status', width: 90, title: '状态', align: 'center', toolbar: '#itemStatusTpl' },
                { title: '操作', width: 150, align: 'center', toolbar: '#openUrlTpl' }
            ]],
            page: true,
            done: function (res, curr, count) {
                //signleSelect($, 'devicedatagrid');
                againSelect($, 'devicedatagrid');
                formatdata(res.data);
            }
        });
        function formatdata(data) {

            for (var i in data) {
                if (data[i].inv_status != 1) {
                    $("#devicedatagrid").next().find("tbody tr").eq(i).find("td").eq(5).css("color", "red");
                }
            }
        }

        // 所属域查询
        $.ajax({
            url: '{{projcfg.base}}/device_route/getZone.do',
            type: 'get',
            success: function (data) {
                $("#zone_id").html("");
                $("#zone_id").append(' <option value="" data-code="">所属域</option>');
                if (data && data.success) {
                    var result = data.data;
                    $.each(result, function (i, r) {
                        $("#zone_id").append('<option value="' + r.zone_id + '" data-code="' + r.is_default + '" >' + r.zone_name + '</option>');
                    });
                    form.render('select');
                }
            }
        });
        var menuMap = {};
        var currentSys;
        var proof;
        // 用户密码来源查询
        $.ajax({
            url: '{{projcfg.base}}/device_route/getProof.do',
            type: 'get',
            success: function (data) {
                $("#proof_id").html("");
                $("#proof_id").append(' <option value="handle">手写用户信息</option>');
                if (data && data.success) {
                    proof = data.data;
                    $.each(proof, function (i, r) {
                        $("#proof_id").append('<option value="' + r.proof_id + '" >' + r.proof_code + '</option>');
                    });
                    form.render('select');
                }
            }
        });

        // ip验证
        $("#ip_inner").change(function () {
            var ip_inner = $("#ip_inner").val();
            var ipZz = /^(\d{1,2}|1\d\d|2[0-4]\d|25[0-5])\.(\d{1,2}|1\d\d|2[0-4]\d|25[0-5])\.(\d{1,2}|1\d\d|2[0-4]\d|25[0-5])\.(\d{1,2}|1\d\d|2[0-4]\d|25[0-5])$/;
            if (ip_inner) {
                if (!ipZz.test(ip_inner)) {
                    layer.msg("IP(内)地址格式不正确！", { icon: 5 });
                    return false;
                }
            } else {
                return false;
            }
            $.ajax({
                url: '{{projcfg.base}}/device_route/validIpAddress.do',
                type: 'get',
                data: {
                    ip_inner: ip_inner,
                },
                success: function (data) {
                    if (!data.success) {
                        $("#ip_inner").val("")
                        layer.msg(data.msg, { icon: 5 });
                        return false;
                    }
                }
            });
        });
        form.on('select(proof_id)', function (data) {
            proofInit(data.value);
        });
        proofInit("handle");

        function proofInit(value) {
            if (value == "handle") {
                $("#con_port").attr("disabled", false);
                $("#user_name").attr("disabled", false);
                $("#pwd").attr("disabled", false);
                $("#sudo_um").attr("disabled", false);
                $("#sudo_pd").attr("disabled", false);

                $("#con_port").css("background-color", "");
                $("#user_name").css("background-color", "");
                $("#pwd").css("background-color", "");
                $("#sudo_um").css("background-color", "");
                $("#sudo_pd").css("background-color", "");
                form.render();
            } else {
                for (var i = 0; i < proof.length; i++) {
                    if (proof[i].proof_id == value) {
                        //先清空，再禁用
                        $("#con_port").val('');
                        $("#user_name").val(proof[i].user);
                        $("#pwd").val(proof[i].pwd);
                        $("#sudo_um").val(proof[i].suser);
                        $("#sudo_pd").val(proof[i].spwd);

                        // $("#con_port").attr("disabled", true);
                        $("#user_name").attr("disabled", true);
                        $("#pwd").attr("disabled", true);
                        $("#sudo_um").attr("disabled", true);
                        $("#sudo_pd").attr("disabled", true);

                        //$("#con_port").css("background-color", "#f0f0f0");
                        $("#user_name").css("background-color", "#f0f0f0");
                        $("#pwd").css("background-color", "#f0f0f0");
                        $("#sudo_um").css("background-color", "#f0f0f0");
                        $("#sudo_pd").css("background-color", "#f0f0f0");
                        form.render();
                    }
                }

            }
        }
        var data;
        table.on('tool(TableFilter)', function (obj) { //注：tool是工具条事件名，test是table原始容器的属性 lay-filter="对应的值"
            data = obj.data; //获得当前行数据
            var layEvent = obj.event; //获得 lay-event 对应的值（也可以是表头的 event 参数对应的值）
            var ip_inner = data.ip_inner;

            // 查看主机
            if (layEvent == "openURL") {
                if (ip_inner) {
                    $.ajax({
                        url: '{{projcfg.base}}/device_route/getGrafanaUrl.do',
                        method: 'get',
                        data: {
                            os_version: data.os_version,
                        },
                        success: function (r) {
                            if (r.length == 1) {
                                var url = r[0].grafana_url.replace('{ip}', ip_inner);
                                window.open(url);
                            } else {
                                layer.msg("查询性能失败", { icon: 5 });
                            }
                        },
                        error: function () {
                            layer.msg("查询性能失败", { icon: 5 });
                        }
                    });
                }
            }
            // 查看详情
            if (layEvent == "showdetails") {
                var url = '{{projcfg.base}}/device_detail.page?inv_id='+data.inv_id;
                window.open(url);
            }
        });

        // 新增
        $(".newsAdd_btn").click(function () {
            //清空数据
            clearData();
            $("#zone_id").attr("disabled", false);
            $("#con_port").val('22');
            $("#delete_btn").hide();
            var index = layui.layer.open({
                type: 1,                //弹窗类型
                title: '新增设备',     //显示标题
                shade: 0.2,
                closeBtn: 1,         //是否显示关闭按钮
                shadeClose: false, //显示模态窗口
                area: ['885px', '580px'], //宽高
                content: $('#open_model'),
                cancel: function (index, layero) {
                    layer.close(index);
                    refresh_table();
                    return false;
                }
            });
            $("#inv_status").val(0);
            var select = 'dd[lay-value="handle"]';
            $('#proof_id').siblings("div.layui-form-select").find('dl').find(select).click();
            $("#con_type").val("ssh");
            form.render("select");
        });

        // 修改
        $(".edit_btn").click(function () {
            clearData();
            $("#delete_btn").show();
            $("#zone_id").attr("disabled", true);
            var selectData = table.checkStatus('devicedatagrid');
            if (1 != selectData.data.length) {
                layer.msg("请选择一行", { icon: 5 });
                return false;
            }
            var row = selectData.data[0];
            if (row.is_default == 3) {
                $("#delete_btn").hide();
            } else {
                $("#delete_btn").show();
            }
            $("#is_default").val(row.is_default);
            $("#is_proxy").val(row.is_proxy);
            $("#inv_id").val(row.inv_id);
            $("#ip_inner").val(row.ip_inner);
            $("#ip_out").val(row.ip_out);
            $("#inv_name").val(row.inv_name);
            $("#obj_code").val(row.obj_code);
            $("#obj_name").val(row.obj_name);
            $("#parent_id").val(row.parent_id);
            $("#os").val(row.os);
            $("#os_version").val(row.os_version);
            $("#zone_id").val(row.zone_id);//所属域
            //            $("#is_test").val(row.is_test);
            if (row.is_test == 1 || row.is_test == '1') {//测试设备 1-是；0-否
                $("input[name='is_test'][value='1']").prop("checked", true);
            } else {
                $("input[name='is_test'][value='0']").prop("checked", true);
            }
            $("#proof_id").val(row.proof_id);// 用户名密码来源
            $("#auth_type").val(row.auth_type);//认证方式 用户名密码 SSH免秘钥
            if (row.auth_type == "用户名密码") {
                $("input[name='auth_type'][value='用户名密码']").prop("checked", true);
                $("#hideArea1").show();
                $("#hideArea2").hide();
            } else if (row.auth_type == "SSH免秘钥") {
                $("input[name='auth_type'][value='SSH免秘钥']").prop("checked", true);
                $("#hideArea1").hide();
                $("#hideArea2").show();
            }
            $("#org_id").val(row.org_id);
            $("#org_name").val(row.org_name);
            $("#org_value").text(row.org_name);
            $("#con_type").val(row.con_type);// 接入方式
            $("#user_name").val(row.user_name);
            $("#sudo_um").val(row.sudo_um);
            $("#pwd").val(row.pwd);
            $("#sudo_pd").val(row.sudo_pd);
            $("#con_port").val(row.con_port);
            $("#inv_status").val(row.inv_status);
            $("#pub_key").val(row.pub_key);
            form.render('radio');
            form.render('select');
            var index = layui.layer.open({
                type: 1,                //弹窗类型
                title: '编辑设备',     //显示标题
                shade: 0.2,
                closeBtn: 1,         //是否显示关闭按钮
                shadeClose: false, //显示模态窗口
                area: ['885px', '580px'], //宽高
                content: $('#open_model'),
                cancel: function (index, layero) {
                    layer.close(index);
                    refresh_table();
                    return false;
                }
            });
        });

        //监听提交
        form.on('submit(save_data)', function (data) {
            var reqData = data.field;
            var is_default = $("#zone_id").find("option:selected").attr('data-code');
            if (is_default) {
                reqData.is_default = is_default;
            }
            var ipZz = /^(\d{1,2}|1\d\d|2[0-4]\d|25[0-5])\.(\d{1,2}|1\d\d|2[0-4]\d|25[0-5])\.(\d{1,2}|1\d\d|2[0-4]\d|25[0-5])\.(\d{1,2}|1\d\d|2[0-4]\d|25[0-5])$/;
            if (!reqData.org_id || !reqData.org_name) {
                layer.msg("所属部门不能为空！", { icon: 5 });
                return false;
            }
            if (reqData.ip_out) {
                if (!ipZz.test(reqData.ip_out)) {
                    layer.msg("IP(公)地址格式不正确！", { icon: 5 });
                    return false;
                }
            }
            if (!ipZz.test(reqData.ip_inner)) {
                layer.msg("IP(内)地址格式不正确！", { icon: 5 });
                return false;
            }
            if (!reqData.zone_id) {
                layer.msg("所属域不能为空！", { icon: 5 });
                return false;
            }
            if (reqData.auth_type == "SSH免秘钥") {
                if (!reqData.pub_key) {
                    layer.msg("公钥不能为空！", { icon: 5 });
                    return false;
                }
            } else if (reqData.auth_type == "用户名密码") {
                if (!reqData.con_type) {
                    layer.msg("接入方式不能为空！", { icon: 5 });
                    return false;
                }
                if ("handle" == reqData.proof_id) {
                    if (!reqData.con_port) {
                        layer.msg("端口不能为空！", { icon: 5 });
                        return false;
                    }
                    var portZz = /^([0-9]|[1-9]\d{1,3}|[1-5]\d{4}|6[0-5]{2}[0-3][0-5])$/;
                    if (!portZz.test(reqData.con_port)) {
                        layer.msg("端口格式不正确！", { icon: 5 });
                        return false;
                    }
                }
            }
            var loading = layer.load(1);
            $.ajax({
                url: "{{projcfg.base}}/device_route/saveAndUpdate.do",
                data: reqData, //请求的附加参数，用json对象
                method: 'post',
                success: function (res) {
                    if (res.success) {
                        table.reload("devicedatagrid");
                        $("#inv_id").val(res.inv_id);
                        layer.close(loading);
                        layer.msg(res.msg, { icon: 6, time: 2000 }, function () {
                        });
                    } else {
                        layer.close(loading);
                        layer.msg(res.msg, { icon: 5 });
                    }
                },
                error: function () {
                    layer.close(loading);
                    layer.msg("新建机构失败", { icon: 5 });
                }
            });
            return false;
        });
        form.on('submit(test_data)', function (data) {
            var reqData = data.field;
            var zone_name = $("#zone_id").find("option:selected").text();
            reqData.zone_name = zone_name;
            var ipZz = /^(\d{1,2}|1\d\d|2[0-4]\d|25[0-5])\.(\d{1,2}|1\d\d|2[0-4]\d|25[0-5])\.(\d{1,2}|1\d\d|2[0-4]\d|25[0-5])\.(\d{1,2}|1\d\d|2[0-4]\d|25[0-5])$/;
            if (reqData.user_name == "" || reqData.user_name == null) {
                layer.msg("认证用户名不能为空", { icon: 5 });
                return false;
            }
            if (reqData.pwd == "" || reqData.pwd == null) {
                layer.msg("认证密码不能为空", { icon: 5 });
                return false;
            }
            if (reqData.ip_out) {
                if (!ipZz.test(reqData.ip_out)) {
                    layer.msg("IP(公)地址格式不正确！", { icon: 5 });
                    return false;
                }
            }
            if (!ipZz.test(reqData.ip_inner)) {
                layer.msg("IP(内)地址格式不正确！", { icon: 5 });
                return false;
            }
            if (!reqData.inv_name) {
                layer.msg("名称不能为空！", { icon: 5 });
                return false;
            }
            if (!reqData.obj_code || !reqData.obj_name) {
                layer.msg("维护对象不能为空！", { icon: 5 });
                return false;
            }
            if (!reqData.org_id || !reqData.org_name) {
                layer.msg("所属部门不能为空！", { icon: 5 });
                return false;
            }
            if (!reqData.auth_type) {
                layer.msg("认证方式不能为空！", { icon: 5 });
                return false;
            }
            if (!reqData.zone_id) {
                layer.msg("所属域不能为空！", { icon: 5 });
                return false;
            }
            if (reqData.auth_type == "SSH免秘钥") {
                if (!reqData.pub_key) {
                    layer.msg("公钥不能为空！", { icon: 5 });
                    return false;
                }
            } else if (reqData.auth_type == "用户名密码") {
                if (!reqData.con_type) {
                    layer.msg("接入方式不能为空！", { icon: 5 });
                    return false;
                }
                if ("handle" == reqData.proof_id) {
                    if (!reqData.con_port) {
                        layer.msg("端口不能为空！", { icon: 5 });
                        return false;
                    }
                    var portZz = /^([0-9]|[1-9]\d{1,3}|[1-5]\d{4}|6[0-5]{2}[0-3][0-5])$/;
                    if (!portZz.test(reqData.con_port)) {
                        layer.msg("端口格式不正确！", { icon: 5 });
                        return false;
                    }
                }
            }

            var loading = layer.load(1);
            $.ajax({
                url: "{{projcfg.base}}/device_route/saveAndUpdate.do",
                data: reqData, //请求的附加参数，用json对象
                method: 'post',
                success: function (res) {
                    if (res.success) {
                        $("#test_btn").attr("disabled", true);
                        $.ajax({
                            url: "{{projcfg.base}}/device_route/addServer.do",
                            data: reqData, //请求的附加参数，用json对象
                            method: 'post',
                            success: function (res) {
                                $("#test_btn").attr("disabled", false);
                                // alert(JSON.stringify(res));
                                if (1 == res.status) {
                                    table.reload("devicedatagrid");
                                    $("#inv_id").val(res.inv_id);
                                    layer.close(loading);
                                    layer.msg(res.msg, { icon: 6, time: 2000 }, function () {
                                    });
                                    var taskid = res.taskid;
                                    pullTaskLog(taskid);
                                    updateTaskStatus(taskid);
                                    layer.msg("任务已启动");
                                    $("#task_status").text("任务已启动");
                                } else if (0 == res.status) {
                                    $("#log").text(res.msg);
                                    layer.msg("任务已完成");
                                    $("#task_status").text("任务已完成,状态码:" + res.status);
                                } else {
                                    $("#log").text(res.msg);
                                    layer.msg("任务执行失败");
                                    $("#task_status").text("任务执行失败,状态码:" + res.status);
                                }
                            }
                        });
                    } else {
                        layer.close(loading);
                        layer.msg(res.msg, { icon: 5 });
                    }
                },
                error: function () {
                    layer.close(loading);
                    layer.msg("新建机构失败", { icon: 5 });
                }
            });
            return false;
        });
        form.on('submit(delete_data)', function (data) {
            var reqData = data.field;
            var zone_name = $("#zone_id").find("option:selected").text();
            reqData.zone_name = zone_name;
            if (reqData.is_default == 3) {//状态为3，视为主机，不可移除
                layer.msg("不能移除master主机", { icon: 5 });
                return false;
            }
            if (reqData.is_proxy == 1) {
                layer.msg("不能移除proxy主机", { icon: 5 });
                return false;
            }
            if (!reqData.inv_id) {
                layer.msg("请选择一条数据！", { icon: 5 });
                return false;
            }
            $("#delete_btn").attr("disabled", true);
            $.ajax({
                url: "{{projcfg.base}}/device_route/deleteServer.do",
                data: reqData, //请求的附加参数，用json对象
                method: 'post',
                success: function (res) {
                    $("#delete_btn").attr("disabled", false);
                    if (1 == res.status) {
                        var taskid = res.taskid;
                        pullTaskLog(taskid);
                        updateTaskStatus(taskid);
                        layer.msg("任务已启动");
                        $("#task_status").text("任务已启动");
                    } else if (0 == res.status) {
                        $("#log").text(res.msg);
                        layer.msg("任务已完成");
                        $("#task_status").text("任务已完成,状态码:" + res.status);
                    } else {
                        $("#log").text(res.msg);
                        layer.msg("任务执行失败");
                        $("#task_status").text("任务执行失败,状态码:" + res.status);
                    }
                }
            });
            return false;
        });

        form.on('radio(auth_type)', function (data) {
            if ("SSH免秘钥" == data.value) {
                $("#hideArea1").hide();
                $("#hideArea2").show();
            } else {
                $("#hideArea1").show();
                $("#hideArea2").hide();
            }
            return false;
        });

        $("#obj_name").click(function () {
            layer.open({
                type: 1,
                title: '上级菜单',
                closeBtn: 1,
                area: ['900px', '500px'],
                content: $('#obj_name_TreeModel'),
                cancel: function (index, layero) {
                    layer.close(index);
                    refresh_table1();
                    return false;
                }
            });
            return false;
        });

        $(".search_btn").click(function () {
            var name = $(".search_input").val();
            table.reload('devicedatagrid', {
                where: { //设定异步数据接口的额外参数，任意设
                    name: name,
                },
                page: {
                    curr: 1 //重新从第 1 页开始
                }
            });
            return false;
        });
        $.ajax({
            url: '{{projcfg.base}}/obj_manage_route/queryMemu.do',
            type: 'get',
            data: { 'obj_type': '2' },
            success: function (res) {
                if (res.success) {
                    layui.tree({
                        elem: '#obj_name_MenuParentTree',
                        nodes: res.data.nodes,
                        click: function (node) {
                            if (node.children && node.children.length > 0) {//叶子节点判断
                                var idArr = [];
                                for (var i = 0; i < node.children.length; i++) {
                                    if (node.children[i].children && node.children[i].children.length > 0) {
                                        var children = node.children[i].children;
                                        for (var j = 0; j < children.length; j++) {
                                            idArr.push(children[j].id);
                                        }
                                    } else {
                                        idArr.push(node.children[i].id);
                                    }
                                }
                                queryListByMenu(idArr);
                            } else {
                                queryListByMenu([node.id]);
                            }
                        }
                    });
                } else {
                    layer.msg(res.msg, { icon: 5 });
                }
            }
        });
        table.render({
            elem: '#datagrid_objType2',
            id: 'datagrid_objType2',
            url: '{{projcfg.base}}/obj_manage_route/list.do',
            where: {
                obj_type: '2',
                search_name: $("#search_name").val()
            },
            cols: [[
                { type: 'numbers' },
                { field: "obj_code", title: '', type: 'checkbox' },
                { field: 'obj_name', title: '维护对象名称', width: 200, align: 'center' },
                { field: 'obj_version', title: '版本', width: 200, align: 'center' },
                { field: 'parent_name', title: '上级分类', width: 200, align: 'center' }
            ]],
            page: false,
            //even: true,//开启隔行背景
            done: function (res, curr, count) {
                signleSelect($, 'datagrid_objType2');
            }
        });

        function queryListByMenu(menuId) {
            var ids = "";
            if (menuId && menuId.length > 0) {
                for (var i = 0; i < menuId.length; i++) {
                    if (menuId[i]) {
                        ids += menuId[i] + ",";
                    }
                }
            }
            ids = ids.substr(0, ids.length - 1);
            if (ids) {
                table.reload('datagrid_objType2', {
                    where: { //设定异步数据接口的额外参数，任意设
                        ids: ids,
                    }
                });
            }
            return false;
        }

        function queryListByOrg(menuId) {
            var ids = "";
            if (menuId && menuId.length > 0) {
                for (var i = 0; i < menuId.length; i++) {
                    if (menuId[i]) {
                        ids += menuId[i] + ",";
                    }
                }
            }
            ids = ids.substr(0, ids.length - 1);
            if (ids) {
                table.reload('devicedatagrid', {
                    where: { //设定异步数据接口的额外参数，任意设
                        ids: ids,
                    }
                });
            }
            return false;
        }

        $(".search_btn_model").click(function () {
            var search_name = $("#search_name").val();
            table.reload('datagrid_objType2', {
                where: { //设定异步数据接口的额外参数，任意设
                    search_name: search_name,
                },
            });
            return false;
        });
        $(".confirm_btn").click(function () {
            var selectData = table.checkStatus('datagrid_objType2');
            if (1 != selectData.data.length) {
                layer.msg("请选择一行", { icon: 5 });
                return false;
            }
            $("#obj_name").val(selectData.data[0].obj_name);//维护对象
            $("#obj_code").val(selectData.data[0].obj_code);//维护对象
            $("#parent_id").val(selectData.data[0].parent_id);//维护对象
            $("#os").val(selectData.data[0].parent_name);// 操作系统
            $("#os_version").val(selectData.data[0].obj_version);// 操作系统版本
            layer.close(layer.index);
            refresh_table1();
            return false;
        });


        function clearData(value) {
            $("#inv_id").val('');
            $("#ip_inner").val('');
            $("#ip_out").val('');
            $("#inv_name").val('');
            $("#obj_code").val('');
            $("#obj_name").val('');
            $("#parent_id").val('');
            $("#os").val('');
            $("#os_version").val('');
            $("#zone_id").val('');
            $("input[name='is_test'][value='0']").prop("checked", true);
            $("input[name='auth_type'][value='用户名密码']").prop("checked", true);
            $("#proof_id").val('');//用户信息来源
            $("#con_type").val('');
            $("#user_name").val('');
            $("#sudo_um").val('');
            $("#pwd").val('');
            $("#sudo_pd").val('');
            $("#con_port").val('');
            $("#org_id").val('');
            $("#org_name").val('');
            $("#is_default").val('');
            $("#org_value").text('');
            $("#log").text('');
            //            $("#logLayer").addClass("layui-hide");
            if (value) {
                //以下是查询框情况信息
                $("#search_name").val('');
                $(".search_input").val('');
            }
            form.render('radio');
            form.render('select');
        }

        //模板下载
        $(".templateDownload_btn").click(function () {
            window.location.href = "{{projcfg.base}}/project/templateFiles/batchImportHostInfo.xlsx";
        });


        //批量导入主机
        upload.render({
            elem: '.batchImportHost_btn' //绑定元素
            , url: '{{projcfg.base}}/device_route/batchImportHost.do' //上传接口
            , accept: 'file'
            , done: function (res) {
                //上传完毕回调
                layer.alert(res.msg);

                table.reload('devicedatagrid', {
                    page: {
                        curr: 1 //重新从第 1 页开始
                    }
                });
            }
            , error: function () {
                //请求异常回调
                layer.msg("失败", { icon: 5 });
            }
        });

        //批量纳入管理
        $(".batchIncludedHost_btn").click(function () {
            var checkStatus = table.checkStatus('devicedatagrid'); //test即为基础参数id对应的值
            if (checkStatus.data.length == 0) {
                layer.msg("未选择行", { icon: 5 });
            } else {
                var flag = true;
                for (var i = 0; i < checkStatus.data.length; i++) {
                    if (checkStatus.data[i].inv_status == 1) {
                        layer.msg(checkStatus.data[i].inv_name + "已纳入管理", { icon: 5 });
                        flag = false;
                        break;
                    }
                }
                if (flag) {
                    $("#hd").hide();
                    var index = layui.layer.open({
                        type: 1,                //弹窗类型
                        title: '批量纳入管理输出',     //显示标题
                        shade: 0.2,
                        closeBtn: 1,         //是否显示关闭按钮
                        shadeClose: false, //显示模态窗口
                        area: ['885px', '280px'], //宽高
                        content: $('#open_model'),
                        cancel: function (index, layero) {
                            layer.close(index);
                            $("#hd").show();
                            refresh_table();
                            return false;
                        }
                    });
                    for (var i = 0; i < checkStatus.data.length; i++) {

                        //引用上面的暂存和纳入管理
                        var reqData = checkStatus.data[i];
                        var zone_name = $("#zone_id").find("option:selected").text();
                        reqData.zone_name = 'zone1';
                        var ipZz = /^(\d{1,2}|1\d\d|2[0-4]\d|25[0-5])\.(\d{1,2}|1\d\d|2[0-4]\d|25[0-5])\.(\d{1,2}|1\d\d|2[0-4]\d|25[0-5])\.(\d{1,2}|1\d\d|2[0-4]\d|25[0-5])$/;

                        if (reqData.user_name == "" || reqData.user_name == null) {
                            layer.msg("认证用户名不能为空", { icon: 5 });
                            return false;
                        }
                        if (reqData.pwd == "" || reqData.pwd == null) {
                            layer.msg("认证密码不能为空", { icon: 5 });
                            return false;
                        }
                        if (reqData.ip_out) {
                            if (!ipZz.test(reqData.ip_out)) {
                                layer.msg("IP(公)地址格式不正确！", { icon: 5 });
                                return false;
                            }
                        }
                        if (!ipZz.test(reqData.ip_inner)) {
                            layer.msg("IP(内)地址格式不正确！", { icon: 5 });
                            return false;
                        }
                        if (!reqData.inv_name) {
                            layer.msg("名称不能为空！", { icon: 5 });
                            return false;
                        }
                        if (!reqData.obj_code || !reqData.obj_name) {
                            layer.msg("维护对象不能为空！", { icon: 5 });
                            return false;
                        }
                        if (!reqData.org_id || !reqData.org_name) {
                            layer.msg("所属部门不能为空！", { icon: 5 });
                            return false;
                        }
                        if (!reqData.auth_type) {
                            layer.msg("认证方式不能为空！", { icon: 5 });
                            return false;
                        }
                        if (!reqData.zone_id) {
                            layer.msg("所属域不能为空！", { icon: 5 });
                            return false;
                        }
                        if (reqData.auth_type == "SSH免秘钥") {
                            if (!reqData.pub_key) {
                                layer.msg("公钥不能为空！", { icon: 5 });
                                return false;
                            }
                        } else if (reqData.auth_type == "用户名密码") {
                            if (!reqData.con_type) {
                                layer.msg("接入方式不能为空！", { icon: 5 });
                                return false;
                            }
                            if ("handle" == reqData.proof_id) {
                                if (!reqData.con_port) {
                                    layer.msg("端口不能为空！", { icon: 5 });
                                    return false;
                                }
                                var portZz = /^([0-9]|[1-9]\d{1,3}|[1-5]\d{4}|6[0-5]{2}[0-3][0-5])$/;
                                if (!portZz.test(reqData.con_port)) {
                                    layer.msg("端口格式不正确！", { icon: 5 });
                                    return false;
                                }
                            }
                        }

                        var f = false;
                        var loading = layer.load(1);
                        $(".batchIncludedHost_btn").attr("disabled", true);
                        $.ajax({
                            url: "{{projcfg.base}}/device_route/addServer.do",
                            aysnc: false,
                            data: reqData, //请求的附加参数，用json对象
                            method: 'post',
                            success: function (res) {
                                $(".batchIncludedHost_btn").attr("disabled", false);
                                // alert(JSON.stringify(res));
                                if (1 == res.status) {
                                    layer.close(loading);
                                    var taskid = res.taskid;
                                    pullTaskLog(taskid);
                                    updateTaskStatus(taskid);
                                    layer.msg("任务已启动");
                                    $("#task_status").text("任务已启动");
                                } else if (0 == res.status) {
                                    $("#log").text(res.msg);
                                    layer.msg("任务已完成");
                                    $("#task_status").text("任务已完成,状态码:" + res.status);
                                    f = true;
                                } else {
                                    $("#log").text(res.msg);
                                    layer.msg("任务执行失败");
                                    $("#task_status").text("任务执行失败,状态码:" + res.status);
                                }
                            }
                        });
                    }
                }
            }
        });


        $('#devicedatagrid').next().find('.layui-table-box tr').contextMenu('myMenu1', {
            bindings:
                    {
                        'open': function (t) {
                            alert('Trigger was ' + t.id + '\nAction was Open');
                        },
                        'email': function (t) {
                            alert('Trigger was ' + t.id + '\nAction was Email');
                        },
                        'save': function (t) {
                            alert('Trigger was ' + t.id + '\nAction was Save');
                        },
                        'delete': function (t) {
                            alert('Trigger was ' + t.id + '\nAction was Delete');
                        }
                    }
        });

        function refresh_table() {
            clearData();
            document.getElementById("open_model").style.display = 'none';
            table.reload('devicedatagrid', {
                height: '{{projcfg.page_config.height}}',
                page: {
                    curr: 1 //重新从第 1 页开始
                }
            });
        }
        function refresh_table1() {
            document.getElementById("obj_name_TreeModel").style.display = 'none';
        }
    });
</script>